{"version":3,"sources":["LoadingSpinnerComponent.js","SimpleModal.js","App.js","serviceWorker.js","index.js"],"names":["LoadingSpinnerComponent","props","usePromiseTracker","promiseInProgress","style","position","top","left","zIndex","transform","type","color","height","width","SimpleModal","handleOpen","setState","open","handleClose","state","classes","this","Modal","aria-labelledby","aria-describedby","className","modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","id","Component","withStyles","theme","display","alignItems","justifyContent","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","markerRef","createRef","mapRef","modalRef","handleLoad","current","leafletElement","openPopup","handleClick","e","setLatLng","latlng","updatePosition","marker","getLatLng","lat","lng","panTo","trackPromise","Axios","get","toString","then","response","popup","L","setContent","bindPopup","data","plot","r","_","zipWith","a","b","c","d","theta","name","Plotly","newPlot","title","font","size","legend","polar","barmode","bargap","radialaxis","ticksuffix","angle","dtick","angularaxis","direction","drawPopup","catch","error","console","log","zoom","openModal","window","addEventListener","Map","center","ref","onClick","TileLayer","attribution","url","Marker","draggable","onDragend","Popup","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.979f4e70.chunk.js","sourcesContent":["import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nexport const LoadingSpinnerComponent = (props) => {\n    const { promiseInProgress } = usePromiseTracker();\n    return (\n        promiseInProgress &&\n        <div style={{\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            zIndex: \"9999\",\n            transform: \"translate(-50%, -50%)\"\n        }}>\n            <Loader type=\"ThreeDots\" color=\"grey\" height=\"100\" width=\"100\" />\n        </div>\n    )\n};\n\nexport default LoadingSpinnerComponent;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n// from: https://www.positronx.io/create-react-modal-popup-with-material-ui/\n\nconst styles = theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n});\n\ntype ModalState = {\n    open: boolean\n}\n\nexport class SimpleModal extends Component<{},ModalState> {\n    constructor() {\n        super();\n        this.state = {\n            open: false\n        };\n    }\n    handleOpen = () => {\n        this.setState({open: true})\n    };\n\n    handleClose = () => {\n        this.setState({open: false})\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={this.state.open}>\n                        <div className={classes.paper} id=\"plotly\"></div>\n                    </Fade>\n                </Modal>\n            </div>\n        );\n    };\n};\n\nSimpleModal.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleModal);","import React, { Component, createRef } from 'react';\nimport './App.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Axios from 'axios';\nimport { trackPromise } from 'react-promise-tracker';\nimport Plotly from 'plotly.js'\nimport _ from 'lodash'\nimport L from 'leaflet'\nimport LoadingSpinnerComponent from './LoadingSpinnerComponent'\nimport SimpleModal from './SimpleModal'\n\nfunction drawPopup(data,marker,popup){\n  var plot = [{\n    r: _.zipWith(_.zipWith(data[\">20 m/s\"],data[\"10-20 m/s\"],data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b,c,d) {\n        return a + b + c + d;\n      }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n      }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"> 20 m/s\",\n    marker: {color: \"rgb(106,81,163)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(_.zipWith(data[\"10-20 m/s\"],data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b,c) {\n      return a + b + c;\n    }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"10-20 m/s\",\n    marker: {color: \"rgb(158,154,200)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(_.zipWith(data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b) {\n      return a + b;\n    }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"5-10 m/s\",\n    marker: {color: \"rgb(203,201,226)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(data[\"<5 m/s\"],data[\"Any\"],function(a,b){\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"< 5 m/s\",\n    marker: {color: \"rgb(242,240,247)\"},\n    type: \"barpolar\"\n  }]\n  var layout = {\n    title: \"Wind Speed Distribution\",\n    font: {size: 12},\n    legend: {font: {size: 10}},\n    polar: {\n      barmode: \"overlay\",\n      bargap: 0,\n      radialaxis: {ticksuffix: \"%\", angle: 45, dtick: 20},\n      angularaxis: {direction: \"clockwise\"}\n    }\n  }\n  Plotly.newPlot(\"plotly\", plot, layout)\n}\n\ntype AppState = {\n  lat: number,\n  lng: number,\n  zoom: number\n}\n\nexport class App extends Component<{},AppState> {\n\n  markerRef = createRef();\n  mapRef = createRef();\n  modalRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  handleLoad = () => {\n    var marker = this.markerRef.current.leafletElement;\n    marker.openPopup();\n  }\n\n  handleClick = (e) => {\n    var marker = this.markerRef.current.leafletElement;\n    marker.setLatLng(e.latlng);\n    this.updatePosition();\n  }\n\n  updatePosition = () => {\n    var marker = this.markerRef.current.leafletElement;\n    var latlng = marker.getLatLng();\n    this.setState({lat: latlng.lat, lng: latlng.lng});\n    this.mapRef.current.leafletElement.panTo(latlng);\n    trackPromise(\n        Axios.get('http://localhost:8080/v1/windrose?height=67.00m&lat='+this.state.lat.toString()+'&lon='+this.state.lng.toString()+\n            '&start_date=20070101&stop_date=20070301&vertical_interpolation=nearest&spatial_interpolation=idw').then(function(response){\n          var popup = L.popup().setContent('You clicked the map at ' + latlng.toString());\n          marker.bindPopup(popup).openPopup();\n          drawPopup(response.data,marker,popup)\n        }).catch(function(error){\n          console.log(error);\n        })\n    );\n    this.modalRef.current.handleOpen();\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      lat: 39.9140131,\n      lng: -105.2176275,\n      zoom: 13,\n      openModal: false\n    }\n  }\n\n  render() {\n    const position = [this.state.lat,this.state.lng]\n    const attribution = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n        'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>';\n    return (\n        <div className='map-container'>\n          <Map center={position} zoom={this.state.zoom} ref={this.mapRef} onClick={this.handleClick}>\n            <TileLayer\n                attribution={attribution}\n                url='https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw'\n            />\n            <Marker position={position} draggable='true' onDragend={this.updatePosition} ref={this.markerRef}>\n              <Popup>\n                To display the wind resource at a location, click somewhere on the map or drag this marker.\n              </Popup>\n            </Marker>\n          </Map>\n          <LoadingSpinnerComponent />\n          <SimpleModal ref={this.modalRef} />\n        </div>\n    );\n  }\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}