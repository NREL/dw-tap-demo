{"version":3,"sources":["LoadingSpinnerComponent.js","SimpleModal.js","ControlsDrawer.js","App.js","serviceWorker.js","index.js"],"names":["LoadingSpinnerComponent","props","usePromiseTracker","promiseInProgress","style","position","top","left","zIndex","transform","type","color","height","width","SimpleModal","handleOpen","setState","open","handleClose","state","classes","this","Modal","aria-labelledby","aria-describedby","className","modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","id","Component","withStyles","theme","display","alignItems","justifyContent","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ControlsDrawer","prepareRequest","lat","lng","_","join","split","startdate","stopdate","vertinterp","spatinterp","toggleOpen","settingsChange","event","target","name","value","Fragment","Fab","aria-label","onClick","Drawer","anchor","noValidate","InputLabel","Select","required","labelId","defaultValue","onChange","MenuItem","TextField","label","InputLabelProps","shrink","App","markerRef","createRef","mapRef","modalRef","drawerRef","handleLoad","current","leafletElement","openPopup","handleClick","e","setLatLng","latlng","updatePosition","marker","getLatLng","panTo","url","toString","trackPromise","Axios","get","then","response","popup","L","setContent","bindPopup","data","plot","r","zipWith","a","b","c","d","theta","Plotly","newPlot","title","font","size","legend","polar","barmode","bargap","radialaxis","ticksuffix","angle","dtick","angularaxis","direction","drawPopup","catch","error","console","log","zoom","openModal","openDrawer","window","addEventListener","Map","center","ref","TileLayer","attribution","Marker","draggable","onDragend","Popup","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2ddeca52.chunk.js","sourcesContent":["import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nexport const LoadingSpinnerComponent = (props) => {\n    const { promiseInProgress } = usePromiseTracker();\n    return (\n        promiseInProgress &&\n        <div style={{\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            zIndex: \"9999\",\n            transform: \"translate(-50%, -50%)\"\n        }}>\n            <Loader type=\"ThreeDots\" color=\"grey\" height=\"100\" width=\"100\" />\n        </div>\n    )\n};\n\nexport default LoadingSpinnerComponent;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n// from: https://www.positronx.io/create-react-modal-popup-with-material-ui/\n\nconst styles = theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n});\n\ntype ModalState = {\n    open: boolean\n}\n\nexport class SimpleModal extends Component<{},ModalState> {\n    constructor() {\n        super();\n        this.state = {\n            open: false\n        };\n    }\n    handleOpen = () => {\n        this.setState({open: true})\n    };\n\n    handleClose = () => {\n        this.setState({open: false})\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={this.state.open}>\n                        <div className={classes.paper} id=\"plotly\"></div>\n                    </Fade>\n                </Modal>\n            </div>\n        );\n    };\n};\n\nSimpleModal.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleModal);","import TextField from \"@material-ui/core/TextField\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport React, {Component} from \"react\";\nimport Fab from \"@material-ui/core/Fab\"\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport _ from \"lodash\"\n\ntype DrawerState = {\n    open: boolean,\n    startdate: string,\n    stopdate: string,\n    vertinterp: string,\n    spatinterp: string,\n    height: number\n}\n\nexport class ControlsDrawer extends Component<{},DrawerState> {\n    constructor() {\n        super();\n        this.state = {\n            open: false,\n            startdate: \"2007-01-01\",\n            stopdate: \"2007-01-02\",\n            vertinterp: 'nearest',\n            spatinterp: 'idw',\n            height: 30\n        };\n    };\n\n    prepareRequest = (lat,lng) => {\n        return 'http://localhost:8080/v1/windrose?height='+this.state.height+'m&lat='+lat+'&lon='+lng+\n            '&start_date='+_.join(_.split(this.state.startdate,'-',3),'')+'&stop_date='+\n            _.join(_.split(this.state.stopdate,'-',3),'')+\n            '&vertical_interpolation='+this.state.vertinterp+\n            '&spatial_interpolation='+this.state.spatinterp\n    };\n\n    toggleOpen = () => {\n        this.setState({open: !this.state['open']})\n    };\n\n    settingsChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Fab color=\"default\" aria-label=\"settings\" onClick={this.toggleOpen} id=\"fab\">\n                <SettingsIcon />\n            </Fab>\n            <Drawer anchor=\"left\" open={this.state[\"open\"]} onClose={this.toggleOpen}>\n                <div id=\"controls\">\n                    <form noValidate>\n                        <InputLabel id=\"vertinterp-label\">Vertical Interpolation *</InputLabel>\n                        <Select\n                            required\n                            labelId=\"vertinterp-label\"\n                            id=\"vertinterp\"\n                            defaultValue=\"nearest\"\n                            value={this.state.vertinterp}\n                            name=\"vertinterp\"\n                            onChange={this.settingsChange}>\n                            <MenuItem value=\"nearest\">Nearest Neighbor</MenuItem>\n                            <MenuItem value=\"linear\">Linear</MenuItem>\n                            <MenuItem value=\"neutral_power\">Neutral Power Law</MenuItem>\n                            <MenuItem value=\"stability_power\">Stability-Corrected Power Law</MenuItem>\n                        </Select>\n                        <br/><br/>\n                        <InputLabel id=\"spatinterp-label\">Spatial Interpolation *</InputLabel>\n                        <Select\n                            required\n                            labelId=\"spatinterp-label\"\n                            id=\"spatinterp\"\n                            defaultValue=\"idw\"\n                            name=\"spatinterp\"\n                            value={this.state.spatinterp}\n                            onChange={this.settingsChange}>\n                            <MenuItem value=\"nearest\">Nearest Neighbor</MenuItem>\n                            <MenuItem value=\"linear\">Linear</MenuItem>\n                            <MenuItem value=\"cubic\">Cubic</MenuItem>\n                            <MenuItem value=\"idw\">Inverse Distance Weighting</MenuItem>\n                        </Select>\n                        <br/><br/>\n                        <TextField\n                            required\n                            id=\"startdate\"\n                            label=\"Start Date\"\n                            type=\"date\"\n                            name=\"startdate\"\n                            value={this.state.startdate}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={this.settingsChange}\n                        />\n                        <br/><br/>\n                        <TextField\n                            required\n                            id=\"stopdate\"\n                            label=\"Stop Date\"\n                            type=\"date\"\n                            name=\"stopdate\"\n                            value={this.state.stopdate}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={this.settingsChange}\n                        />\n                        <br/><br/>\n                        <TextField\n                            required\n                            id=\"height\"\n                            label=\"Height (m)\"\n                            name=\"height\"\n                            value={this.state.height}\n                            onChange={this.settingsChange}\n                        />\n                    </form>\n                    <br/><br/>\n                    <div id=\"disclaimer\">\n                        Note: Performance may degrade with increased time between start and stop date. This limitation\n                        will be addressed in a future release.\n                    </div>\n                </div>\n            </Drawer>\n            </React.Fragment>\n        );\n    };\n};\n\nexport default ControlsDrawer;\n\n","import React, { Component, createRef } from 'react';\nimport './App.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Axios from 'axios';\nimport { trackPromise } from 'react-promise-tracker';\nimport Plotly from 'plotly.js'\nimport _ from 'lodash'\nimport L from 'leaflet'\nimport LoadingSpinnerComponent from './LoadingSpinnerComponent'\nimport SimpleModal from './SimpleModal'\nimport ControlsDrawer from \"./ControlsDrawer\";\n\n// global function so that it can be seen within the promise and axios request\n// (there may be a better way to do this)\nfunction drawPopup(data,marker,popup){\n  // note: all these zipWith commands are getting the data in a form ready for plotting, which means\n  // cumulatively summing each windspeed class so that they appear to 'stack' in the plot, and then\n  // scaling the entire stack by the proportion of observations in each direction\n  var plot = [{\n    r: _.zipWith(_.zipWith(data[\">20 m/s\"],data[\"10-20 m/s\"],data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b,c,d) {\n      return a + b + c + d;\n    }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"> 20 m/s\",\n    marker: {color: \"rgb(106,81,163)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(_.zipWith(data[\"10-20 m/s\"],data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b,c) {\n      return a + b + c;\n    }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"10-20 m/s\",\n    marker: {color: \"rgb(158,154,200)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(_.zipWith(data[\"5-10 m/s\"],data[\"<5 m/s\"],function(a,b) {\n      return a + b;\n    }),data[\"Any\"],function(a,b) {\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"5-10 m/s\",\n    marker: {color: \"rgb(203,201,226)\"},\n    type: \"barpolar\"\n  }, {\n    r: _.zipWith(data[\"<5 m/s\"],data[\"Any\"],function(a,b){\n      return a * (b / 100.0);\n    }),\n    theta: [\"North\", \"N-E\", \"East\", \"S-E\", \"South\", \"S-W\", \"West\", \"N-W\"],\n    name: \"< 5 m/s\",\n    marker: {color: \"rgb(242,240,247)\"},\n    type: \"barpolar\"\n  }]\n  var layout = {\n    title: \"Wind Speed Distribution\",\n    font: {size: 12},\n    legend: {font: {size: 10}},\n    polar: {\n      barmode: \"overlay\",\n      bargap: 0,\n      radialaxis: {ticksuffix: \"%\", angle: 45, dtick: 20},\n      angularaxis: {direction: \"clockwise\"}\n    }\n  }\n  Plotly.newPlot(\"plotly\", plot, layout)\n}\n\ntype AppState = {\n  lat: number,\n  lng: number,\n  zoom: number\n}\n\nexport class App extends Component<{},AppState> {\n\n  constructor() {\n    super();\n    this.state = {\n      lat: 39.9140131,\n      lng: -105.2176275,\n      zoom: 13,\n      openModal: false,\n      openDrawer: false\n    }\n  }\n\n  markerRef = createRef();\n  mapRef = createRef();\n  modalRef = createRef();\n  drawerRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  handleLoad = () => {\n    var marker = this.markerRef.current.leafletElement;\n    marker.openPopup();\n  }\n\n  handleClick = (e) => {\n    var marker = this.markerRef.current.leafletElement;\n    marker.setLatLng(e.latlng);\n    this.updatePosition();\n  }\n\n  updatePosition = () => {\n    var marker = this.markerRef.current.leafletElement;\n    var latlng = marker.getLatLng();\n    this.setState({lat: latlng.lat, lng: latlng.lng});\n    this.mapRef.current.leafletElement.panTo(latlng);\n    var url = this.drawerRef.current.prepareRequest(this.state.lat.toString(),this.state.lng.toString());\n\n    trackPromise(\n        Axios.get(url).then(function(response){\n          var popup = L.popup().setContent('You clicked the map at ' + latlng.toString());\n          marker.bindPopup(popup).openPopup();\n          drawPopup(response.data,marker,popup)\n        }).catch(function(error){\n          console.log(error);\n        })\n    );\n    this.modalRef.current.handleOpen();\n  }\n\n  render() {\n    const position = [this.state.lat,this.state.lng]\n    const attribution = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n        'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>';\n    return (\n\n        <div className='map-container'>\n          <Map center={position} zoom={this.state.zoom} ref={this.mapRef} onClick={this.handleClick}>\n            <TileLayer\n                attribution={attribution}\n                url='https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw'\n            />\n            <Marker position={position} draggable='true' onDragend={this.updatePosition} ref={this.markerRef}>\n              <Popup>\n                To display the wind resource at a location, click somewhere on the map or drag this marker.\n              </Popup>\n            </Marker>\n          </Map>\n          <ControlsDrawer ref={this.drawerRef} />\n          <LoadingSpinnerComponent />\n          <SimpleModal ref={this.modalRef} />\n        </div>\n    );\n  }\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}